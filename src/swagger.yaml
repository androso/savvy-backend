openapi: 3.0.0
info:
  title: savvy-API
  version: 1.0.0
  description: This is a simple API for the Savvy application, which is a platform for learning knowledge.
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Course:
      type: object
      properties:
        course_id:
          type: integer
          format: int32
        user_id:
          type: integer
          format: int32
        course_name:
          type: string
          maxLength: 100
        created_at:
          type: string
          format: date-time
          default: current_timestamp
        description:
          type: string
          default: ""
      required:
        - course_id
        - user_id
        - course_name
        - description
      example:
        course_id: 1
        user_id: 123
        course_name: "Introduction to Programming"
        created_at: "2023-10-01T00:00:00Z"
        description: "A beginner's course on programming."
paths:
  /courses:
    get:
      summary: Get all courses for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Courses
      responses:
        "200":
          description: Successful response with courses data
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Course"
              examples:
                example1:
                  summary: A single course example
                  value:
                    - course_id: 1
                      user_id: 123
                      course_name: "Psicologia Infantil"
                      created_at: "2023-10-01T00:00:00Z"
                      description: "Curso dedicado al aprendizaje de la psicologia infantil"
        "500":
          description: Internal Server Error
    post:
      summary: Create a new course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Courses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  description: The name of the course
                  example: "Introduction to Programming"
                description:
                  type: string
                  description: The description of the course
                  example: "A beginner's course on programming."
      responses:
        "201":
          description: Course created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        "400":
          description: Not enough arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Not enough arguments"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An unexpected error occurred."
  /courses/{id}:
    put:
      summary: Update a specific course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Courses
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                course_name:
                  type: string
                  description: The name of the course
                  example: "Advanced Programming"
                description:
                  type: string
                  description: The description of the course
                  example: "An advanced course on programming."
      responses:
        "200":
          description: Course updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Course"
        "400":
          description: Invalid course_id or not enough arguments
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Invalid course_id or not enough arguments"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An unexpected error occurred."
    delete:
      summary: Delete a specific course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Courses
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course to delete
      responses:
        "200":
          description: Course deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: The deleted course data
              examples:
                example1:
                  summary: A single deleted course example
                  value:
                    data:
                      course_id: 1
                      user_id: 123
                      course_name: "Introduction to Programming"
                      created_at: "2023-10-01T00:00:00Z"
                      description: "A beginner's course on programming."
        "400":
          description: Invalid course_id
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Invalid course_id."
        "404":
          description: Course not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Course not found."
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An unexpected error occurred."
    /courses/{id}/topics:
    get:
      summary: Get all topics for a specific course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Topics
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course
      responses:
        '200':
          description: Successful response with topics data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    topic_id:
                      type: integer
                    course_id:
                      type: integer
                    title:
                      type: string
                    content:
                      type: string
              examples:
                example1:
                  summary: A single topic example
                  value:
                    - topic_id: 1
                      course_id: 1
                      title: "Introduction to Topic"
                      content: "This is the content of the topic."
        '404':
          description: No courses found for this user
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "No courses found for this user"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An error occurred"
  /courses/{id}/topics/{topicId}/flashcards:
    get:
      summary: Get all flashcards for a specific topic within a course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Flashcards
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course
        - in: path
          name: topicId
          schema:
            type: string
          required: true
          description: The ID of the topic
      responses:
        '200':
          description: Successful response with flashcards data
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    flashcard_id:
                      type: integer
                    topic_id:
                      type: string
                    question:
                      type: string
                    answer:
                      type: string
              examples:
                example1:
                  summary: A single flashcard example
                  value:
                    - flashcard_id: 1
                      topic_id: "123e4567-e89b-12d3-a456-426614174000"
                      question: "What is the capital of France?"
                      answer: "Paris"
        '400':
          description: Invalid course_id or topic_id
          content:
            application/json:
              schema:
                type: object
                properties:
                error:
                    type: string
              example:
                error: "Invalid course_id or topic_id."
        '404':
          description: No topics found for the user
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
              example:
                message: "No topics found for the user."
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An unexpected error occurred."
  /courses/{id}/suggested-topics:
    get:
      summary: Get suggested topics for a specific course for the authenticated user
      security:
        - bearerAuth: []
      tags:
        - Suggested Topics
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the course
      responses:
        '200':
          description: Successful response with suggested topics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  topics:
                    type: array
                    items:
                      type: object
                      properties:
                        topic_name:
                          type: string
                        course_id:
                          type: integer
              examples:
                example1:
                  summary: A single suggested topic example
                  value:
                    topics:
                      - topic_name: "Introduction to Programming"
                        course_id: 1
        '400':
          description: Course title and description are required
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Course title and description are required"
        '404':
          description: Course not found or you do not have access to it
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "Course not found or you do not have access to it"
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
              example:
                error: "An unexpected error occurred"